plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.35.0'
}

group = 'com.interview.codepole'
version = '0.0.1-SNAPSHOT'


java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java', 'src/api-test/java']
        }
        resources {
            srcDirs = ['src/test/resources', 'src/api-test/resources']
        }
    }
}

bootJar {
    archiveBaseName.set('order-service')
    archiveVersion.set('0.0.1')
}

docker {
    name "${project.group}/${bootJar.archiveBaseName.get()}:${bootJar.archiveVersion.get()}"
    files bootJar.archiveFile
    buildArgs(['JAR_FILE': "${bootJar.archiveBaseName.get()}-${bootJar.archiveVersion.get()}.jar"])
    dockerfile file('Dockerfile')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-mysql'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'com.h2database:h2'
    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'
    implementation 'commons-validator:commons-validator:1.8.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        events 'passed', 'skipped', 'failed'
    }
}
